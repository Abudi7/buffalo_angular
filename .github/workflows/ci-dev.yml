name: CI - Development Branch

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

env:
  NODE_VERSION: '18'
  GO_VERSION: '1.21'

jobs:
  # Frontend Tests and Build
  frontend-ci:
    name: Frontend CI
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: timetrac-frontend/package-lock.json
          
      - name: Install dependencies
        working-directory: ./timetrac-frontend
        run: npm ci
        
      - name: Run linting
        working-directory: ./timetrac-frontend
        run: npm run lint --if-present
        
      - name: Run tests
        working-directory: ./timetrac-frontend
        run: npm run test -- --watch=false --browsers=ChromeHeadless
        
      - name: Build application
        working-directory: ./timetrac-frontend
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build-dev
          path: timetrac-frontend/www/
          retention-days: 7

  # Backend Tests
  backend-ci:
    name: Backend CI
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: timetrac_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          
      - name: Install dependencies
        working-directory: ./backend
        run: go mod download
        
      - name: Run tests
        working-directory: ./backend
        run: go test ./... -v
        env:
          GO_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/timetrac_test?sslmode=disable

  # Security Scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  # Code Quality
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: timetrac-frontend/package-lock.json
          
      - name: Install dependencies
        working-directory: ./timetrac-frontend
        run: npm ci
        
      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=abudi7
            -Dsonar.projectKey=abudi7_buffalo_angular
            -Dsonar.sources=.
            -Dsonar.host.url=https://sonarcloud.io
